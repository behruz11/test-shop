name: Service
  
on:
  push:
    branches:
      - "services"

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres1:
        image: postgres:16.3-alpine
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          POSTGRES_DB: db1
          POSTGRES_USER: user1
          POSTGRES_PASSWORD: password

      postgres2:
        image: postgres:16.3-alpine
        ports:
          - 5433:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          POSTGRES_DB: db2
          POSTGRES_USER: user2
          POSTGRES_PASSWORD: password

      redis:
        image: redis:7.0-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for PostgreSQL to be ready
      run: |
        while ! nc -z localhost 5432; do
          sleep 1
        done
        while ! nc -z localhost 5433; do
          sleep 1
        done

    - name: Initialize databases
      run: |
        psql -h localhost -p 5432 -U user1 -d db1 -c "CREATE TABLE test (id SERIAL PRIMARY KEY, data VARCHAR(100));"
        psql -h localhost -p 5432 -U user1 -d db1 -c "INSERT INTO test (data) VALUES ('Master data 1'), ('Master data 2');"
        psql -h localhost -p 5433 -U user2 -d db2 -c "CREATE TABLE test (id SERIAL PRIMARY KEY, data VARCHAR(100));"
        psql -h localhost -p 5433 -U user2 -d db2 -c "INSERT INTO test (data) VALUES ('Replica data 1'), ('Replica data 2');"
      env:
        PGPASSWORD: password

    - name: Run Python script
      run: python3 connect_postgres.py
      env:
        POSTGRES1_HOST: localhost
        POSTGRES1_PORT: 5432
        POSTGRES1_DB: db1
        POSTGRES1_USER: user1
        POSTGRES1_PASSWORD: password
        POSTGRES2_HOST: localhost
        POSTGRES2_PORT: 5433
        POSTGRES2_DB: db2
        POSTGRES2_USER: user2
        POSTGRES2_PASSWORD: password
